<b>Работа с count</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: count.</p>
<p>Дан массив $arr. Подсчитайте количество элементов этого массива.</p>
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
echo count($arr);
?>
<p>Дан массив $arr. С помощью функции count выведите последний элемент данного массива.</p>
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
echo $arr[count($arr)-1];
?>
<p></p><br>
<b>Работа с in_array</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: in_array:</p>
<p>Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.</p>
<?php
$arr = [1, 2, 3, 4, 5];
var_dump (in_array(3, $arr));
?>
<p></p><br>
<b>Работа с array_sum и array_product</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_sum, array_product:</p>
<p>Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.</p>
<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);
?>
<p>Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.</p>
<?php
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);
?>
<p>Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.</p>
<?php
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr) / count($arr);
?>
<p></p><br>
<b>Работа с range</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: range:</p>
<p>Создайте массив, заполненный числами от 1 до 100.</p>
<?php
$arr = range(1, 100);
var_dump($arr);
?>
<p>Создайте массив, заполненный буквами от 'a' до 'z'.</p>
<?php
$arr = range('a', 'z');
var_dump($arr);
?>
<p>Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.</p>
<p>Подсказка: используйте функции range и implode:</p>
<?php
$arr = range(1, 9);
echo implode('-', $arr);
?>
<p>Найдите сумму чисел от 1 до 100 не используя цикл.</p>
<?php
$arr = range(1, 100);
echo array_sum($arr);
?>
<p>Найдите произведение чисел от 1 до 10 не используя цикл.</p>
<?php
$arr = range(1, 10);
echo array_product($arr);
?>
<p></p><br>
<b>Работа с array_merge</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_merge:</p>
<p>Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.</p>
<?php
$arrNum = [1, 2, 3];
$arrTxt = ['a', 'b', 'c'];
$res = array_merge($arrNum, $arrTxt);
var_dump($res);
?>
<p></p><br>
<b>Работа с array_slice</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_slice:</p>
<p>Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.</p>
<?php
$arr = [1, 2, 3, 4, 5];
var_dump(array_slice($arr, 1, 3));
?>
<p></p><br>
<b>Работа с array_splice</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_splice:</p>
<p>Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5].</p>
<?php
$arr = range(1, 5);
array_splice($arr, 1, 2);
var_dump($arr);
?>
<p>Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].</p>
<?php
$arr = [1, 2, 3, 4, 5];
var_dump(array_splice($arr, 1, 0, [2, 3, 4]));
var_dump($arr);
?>
<p>Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].</p>
<?php
$arr = range(1, 5);
array_splice($arr, 3, 0,['a', 'b', 'c']);
var_dump($arr);
?>
<p>Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].</p>
<?php
$arr = range(1, 5);
array_splice($arr, 1, 0,['a', 'b']);
array_splice($arr, 6, 0,['c']);
array_splice($arr, 8, 0, ['e']);
var_dump($arr);
?>
<p></p><br>
<b>Работа с array_keys, array_values, array_combine</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_keys, array_values, array_combine:</p>
<p>Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Запишите в массив $keys ключи из этого массива, а в $values – значения.</p>
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$keys = array_keys($arr);
$values = array_values($arr);
var_dump($keys);
var_dump($values);
?>
<p>Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.</p>
<?php
$keys = ['a', 'b', 'c'];
$values = [1, 2, 3];
$arr = array_combine($keys, $values);
var_dump($arr);
?>
<p></p><br>
<b>Работа с array_flip, array_reverse</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_flip, array_reverse:</p>
<p>Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.</p>
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$res = array_flip($arr);
var_dump($res);
?>
<p>Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.</p>
<?php
$arr = range(1, 5);
$res = array_reverse($arr);
var_dump($res);
?>
<p></p><br>
<b>Работа с array_search</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_search:</p>
<p>Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.</p>
<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
echo array_search('a', $arr);
?>
<p>Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.</p>
<?php
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$res = array_search('-', $arr);
array_splice($arr, $res, 1);
var_dump($arr);
?>

<p></p><br>
<b>Работа с array_replace</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_replace:</p>
<p>Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.</p>
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
$res = array_replace($arr, [0=>'!', 3=>'!!']);
var_dump($res);
?>
<p></p><br>
<b>Работа с сортировку</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: функции для сортировки:</p>
<p>Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.</p>
<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
sort($arr);
var_dump($arr);
?>
<br>
<?php
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
shuffle($arr);
var_dump($arr);
?>
<br>
<?php
$arr = [ '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
arsort($arr);
var_dump($arr);
?>
<br>
<?php
$arr = [ '3' =>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
krsort($arr);
var_dump($arr);
?>
<p></p><br>
<b>Работа с array_rand</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_rand:</p>
<p>Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива.</p>
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$res = array_rand($arr);
echo $res;
?>
<p>Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива.</p>
<?php
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$res = array_rand($arr);
echo $arr[$res];
?>
<p></p><br>
<b>Работа с shuffle</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: shuffle:</p>
<p>Дан массив $arr. Перемешайте его элементы в случайном порядке.</p>
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
shuffle($arr);
var_dump($arr);
?>
<p>Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.</p>
<?php
$arr = range(1, 25);
shuffle($arr);
var_dump($arr);
?>
<p>Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.</p>
<?php
$arr = range('a', 'z');
shuffle($arr);
var_dump($arr);
?>
<p>Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться.</p>
<?php
$arr = range('a', 'z');
shuffle($arr);
$res = implode('', $arr);
echo substr($res, 0, 6);
?>
<p></p><br>
<b>Работа с array_unique</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_unique:</p>
<p>Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.</p>
<?php
$arr =['a', 'b', 'c', 'b', 'a'];
$res = array_unique($arr);
var_dump($res);
?>
<p></p><br>
<b>Работа с array_shift, array_pop, array_unshift, array_push</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_shift, array_pop, array_unshift, array_push:</p>
<p>Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли.</p>
<?php
$arr = [1, 2, 3, 4, 5];
echo array_shift($arr).'<br>';
echo array_pop($arr).'<br>';
var_dump($arr);
?>
<p>Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6.</p>
<?php
$arr = [1, 2, 3, 4, 5];
array_unshift($arr, 0);
array_push($arr, 6);
var_dump($arr);
?>
<p>Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем порядке: 18273645.</p>
<?php
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
while (count($arr) > 0) {
    echo array_shift($arr);
    echo array_pop($arr);
}
?>
<p></p><br>
<b>Работа с array_pad, array_fill, array_fill_keys, array_chunk</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_pad, array_fill, array_fill_keys, array_chunk:</p>
<p>Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'.</p>
<?php
$arr = ['a', 'b', 'c'];
$arr = array_pad($arr, 6, ' - ');
var_dump($arr);
?>
<p>Заполните массив 10-ю буквами 'x'.</p>
<?php
$arr = array_fill (0, 10, 'x');
var_dump($arr);
?>
<p>Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот массив на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.).</p>
<?php
$arr = range (1, 20);
var_dump(array_chunk($arr, 4));
?>
<p></p><br>
<b>Работа с array_count_values</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_count_values:</p>
<p>Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.</p>
<?php
$arr = ['a', 'b', 'c', 'b', 'a'];
var_dump(array_count_values($arr));
?>
<p></p><br>
<b>Работа с array_map</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_map:</p>
<p>Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать квадратные корни данных элементов.</p>
<?php
$arr = [1, 2, 3, 4, 5];
$res = array_map('sqrt', $arr);
var_dump($res);
?>
<p>Дан массив с элементами '< b>php< /b>', '< i>html< /i>'. Создайте новый массив, в котором из элементов будут удалены теги.</p>
<?php
$arr = ['<b>php</b>', '<i>html</i>'];
$res = array_map('strip_tags', $arr);
var_dump($res);
?>
<p>Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы без концевых пробелов.</p>
<?php
$arr = [' a ', ' b ', ' с '];
$res = array_map('trim', $arr);
var_dump($res);
?>
<p></p><br>
<b>Работа с array_intersect, array_diff</b>
<p>Для решения задач данного блока вам понадобятся следующие функции: array_intersect, array_diff:</p>
<p>Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые есть и в том, и в другом массиве.</p>
<?php
$arr = [1, 2, 3, 4, 5];
$arrTwo = [3, 4, 5, 6, 7];
$res = array_intersect($arr, $arrTwo);
var_dump($res);
?>
<p>Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые не присутствуют в обоих массивах одновременно.</p>
<?php
$arr = [1, 2, 3, 4, 5];
$arrTwo = [3, 4, 5, 6, 7];
$res = array_diff($arr, $arrTwo);
var_dump($res);
?>
<p></p><br>
<b>Задачи</b>
<p>Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл.</p>
<?php
$str = '1234567890';
$arr = str_split($str, 1);
echo array_sum($arr);
?>
<p>Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл.</p>
<?php
$arr = range('a', 'z');
$arrTwo = range(1, 26);
$res = array_combine($arr, $arrTwo);
var_dump($res);
?>
<p><i>Подсказка: используйте функцию range два раза: чтобы сделать массив букв и массив чисел, а затем слейте эти два массива с помощью array_combine.</i></p>
<p>Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл.</p>
<?php
$arr = range(1, 9);
var_dump(array_chunk($arr, 3));
?>
<p><i>Подсказка: используйте функцию range, а затем array_chunk.</i></p>
<p>Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.</p>
<?php
$arr = [1, 2, 4, 5, 5];
$arr = array_unique($arr);
rsort($arr);
echo $arr[1];
?>
